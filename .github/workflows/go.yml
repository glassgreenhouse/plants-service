name: go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1

  protoc:
    name: protobuf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.18"
      - uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/work/plants-service/plants-service/infrastructure/proto
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2.10.0
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@v2.10.0
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
      - run: |
          protoc --proto_path=./infrastructure/proto \
            --go_out=./infrastructure/proto \
            --go_opt=paths=source_relative \
            --go-grpc_out=./infrastructure/proto \
            --go-grpc_opt=paths=source_relative \
            --grpc-gateway_out ./infrastructure/proto \
            --grpc-gateway_opt paths=source_relative \
            infrastructure/proto/plant.proto

  test:
    name: test on go ${{ matrix.go }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ "1.18", "1.17", "1.16" ]
    needs: [lint, protoc]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: go get -v -u ./...
      - run: |
          go test -v ./... -covermode=count -coverprofile cover.out
      - uses: jandelgado/gcov2lcov-action@v1.0.8
        with:
          infile: cover.out
          outfile: cover.lcov
      - uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: cover.lcov

  build:
    name: build on go ${{ matrix.go }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ "1.18", "1.17", "1.16" ]
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          go get -v -u ./...
          go build -v ./...